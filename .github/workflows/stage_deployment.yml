on:
  push:
    branches:
      - dev

jobs:
  export_linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Export game (Windows + Linux, C#)
        id: export
        uses: firebelley/godot-export@v7.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot-builds/releases/download/4.3-stable/Godot_v4.3-stable_mono_linux_x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot-builds/releases/download/4.3-stable/Godot_v4.3-stable_mono_export_templates.tpz
          relative_project_path: ./
          presets_to_export: Linux
          use_preset_export_path: false
          archive_output: false
          cache: true

      - name: Prepare Linux depot (robust)
        run: |
          set -euxo pipefail
          BUILD_DIR="${{ steps.export.outputs.build_directory }}"
          echo "BUILD_DIR=$BUILD_DIR"

          # Find the folder that contains the exported Linux binary
          LINUX_DIR="$(find "$BUILD_DIR" -type f -name '*.x86_64' -printf '%h\n' | sort -u | head -n1 || true)"
          if [ -z "$LINUX_DIR" ]; then
            echo "No Linux binary found under $BUILD_DIR. Contents:"
            find "$BUILD_DIR" -maxdepth 3 -type f -printf '%P\n' | sort
            exit 1
          fi
          echo "Found Linux export at: $LINUX_DIR"

          # Create the Steam depot folder and mirror files into it
          DEPOT_DIR="$GITHUB_WORKSPACE/build/StandaloneLinux64"
          mkdir -p "$DEPOT_DIR"
          rsync -a --delete "$LINUX_DIR/." "$DEPOT_DIR/"
          
          # Move libsteam_api.so to the root of the depot
          SOURCE_DIR="$LINUX_DIR/data_Godot-Peer-2-Peer-Steam-CSharp_linuxbsd_x86_64"
          if [ -d "$SOURCE_DIR" ]; then
            mv "$SOURCE_DIR/libsteam_api.so" "$DEPOT_DIR/" || true
          fi
          
          echo "${{ secrets.STEAM_APP_ID }}" > $DEPOT_DIR/steam_appid.txt

          # Add your launcher and ensure execute bits
          chmod +x "$DEPOT_DIR/"*.x86_64 || true

          echo "DEPOT_DIR=$DEPOT_DIR" >> "$GITHUB_ENV"
          echo "Linux depot contents:"
          find "$DEPOT_DIR" -maxdepth 1 -type f -printf "%f\n" | sort

      - name: Upload depot as artifact
        uses: actions/upload-artifact@v4
        with:
          name: steam-linux
          path: build

  deployToSteam:
    needs: export_linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: steam-linux
          path: build

      - name: Upload Linux depot to Steam (prerelease)
        uses: game-ci/steam-deploy@v3
        with:
          username: ${{ secrets.STEAM_USERNAME }}
          configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
          appId: ${{ secrets.STEAM_APP_ID }}
          buildDescription: ${{ github.sha }}
          rootPath: build
          depot1Path: StandaloneLinux64
          releaseBranch: prerelease